version: "3"
services:
  web:
    # replace username/repo:tag with your name and image details
    # Pull the image we uploaded in step 2 from the registry.
    image: caliari/get-started:part1
    deploy:
      # Run five instances of that image as a service called web
      replicas: 5
      # Immediately restart containers if one fails.
      restart_policy:
        condition: on-failure
      resources:
        # limiting each one to use, at most, 10% of the CPU (across all cores), and 50MB of RAM.
        limits:
          cpus: "0.1"
          memory: 50M
    # Map port 80 on the host to web’s port 80.
    ports:
      - "80:80"
    # Instruct web’s containers to share port 80 via a load-balanced network called webnet
    networks:
      - webnet
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  # Redis service that will provide a visitor counter.
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
# Define the webnet network with the default settings (which is a load-balanced overlay network).
networks:
  webnet:
